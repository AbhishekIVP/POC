//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.ivp.srm.vendorapi.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostingLocksOutputInfo", Namespace="http://schemas.datacontract.org/2004/07/SecMasterDataUploadManager")]
    [System.SerializableAttribute()]
    public partial class PostingLocksOutputInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> InstrumentIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> InstrumentIds {
            get {
                return this.InstrumentIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentIdsField, value) != true)) {
                    this.InstrumentIdsField = value;
                    this.RaisePropertyChanged("InstrumentIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClearPostingLocksOutputInfo", Namespace="http://schemas.datacontract.org/2004/07/SecMasterDataUploadManager")]
    [System.SerializableAttribute()]
    public partial class ClearPostingLocksOutputInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISMDataUploadManager")]
    public interface ISMDataUploadManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/Register", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterResponse")]
        bool Register(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegister", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterResponse")]
        void UnRegister(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterPriorRule", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterPriorRuleResponse")]
        bool RegisterPriorRule(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterPriorRule", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterPriorRuleResponse")]
        void UnRegisterPriorRule(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterCorpAction", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterCorpActionResponse")]
        bool RegisterCorpAction(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterCorpAction", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterCorpActionResponse")]
        void UnRegisterCorpAction(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/GetGuid", ReplyAction="http://tempuri.org/ISMDataUploadManager/GetGuidResponse")]
        string GetGuid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterPosting", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterPostingResponse")]
        System.Collections.Generic.List<string> RegisterPosting(int systemId, System.Collections.Generic.List<string> secIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterPosting", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterPostingResponse")]
        void UnRegisterPosting(int systemId, System.Collections.Generic.List<string> secIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterFileUpload", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterFileUploadResponse")]
        bool RegisterFileUpload(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterFileUpload", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterFileUploadResponse")]
        void UnRegisterFileUpload(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterSecuritiesForUpdates", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterSecuritiesForUpdatesResponse")]
        bool RegisterSecuritiesForUpdates(System.Collections.Generic.List<string> securities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterSecuritiesForUpdates", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterSecuritiesForUpdatesResponse")]
        void UnRegisterSecuritiesForUpdates(System.Collections.Generic.List<string> securities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterDownstreamPosting", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterDownstreamPostingResponse")]
        void RegisterDownstreamPosting(int systemId, System.Collections.Generic.List<string> instrumentIds, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterDownstreamPosting", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterDownstreamPostingResponse")]
        void UnRegisterDownstreamPosting(int systemId, System.Collections.Generic.List<string> instrumentIds, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterTimeSeriesLock", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterTimeSeriesLockResponse")]
        bool RegisterTimeSeriesLock(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterTimeSeriesLock", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterTimeSeriesLockResponse")]
        void UnRegisterTimeSeriesLock(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/RegisterBBGAuditLock", ReplyAction="http://tempuri.org/ISMDataUploadManager/RegisterBBGAuditLockResponse")]
        bool RegisterBBGAuditLock(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/UnRegisterBBGAuditLock", ReplyAction="http://tempuri.org/ISMDataUploadManager/UnRegisterBBGAuditLockResponse")]
        void UnRegisterBBGAuditLock(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/GetAvailableModules", ReplyAction="http://tempuri.org/ISMDataUploadManager/GetAvailableModulesResponse")]
        System.Collections.Generic.List<string> GetAvailableModules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/GetPostingLocks", ReplyAction="http://tempuri.org/ISMDataUploadManager/GetPostingLocksResponse")]
        System.Collections.Generic.List<com.ivp.srm.vendorapi.ServiceReference1.PostingLocksOutputInfo> GetPostingLocks(string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMDataUploadManager/ClearPostingLocks", ReplyAction="http://tempuri.org/ISMDataUploadManager/ClearPostingLocksResponse")]
        com.ivp.srm.vendorapi.ServiceReference1.ClearPostingLocksOutputInfo ClearPostingLocks(string moduleName, string systemName, string InstrumentIds, string clientName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISMDataUploadManagerChannel : com.ivp.srm.vendorapi.ServiceReference1.ISMDataUploadManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SMDataUploadManagerClient : System.ServiceModel.ClientBase<com.ivp.srm.vendorapi.ServiceReference1.ISMDataUploadManager>, com.ivp.srm.vendorapi.ServiceReference1.ISMDataUploadManager {
        
        public SMDataUploadManagerClient() {
        }
        
        public SMDataUploadManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SMDataUploadManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SMDataUploadManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SMDataUploadManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string identifier) {
            return base.Channel.Register(identifier);
        }
        
        public void UnRegister(string identifier) {
            base.Channel.UnRegister(identifier);
        }
        
        public bool RegisterPriorRule(string identifier) {
            return base.Channel.RegisterPriorRule(identifier);
        }
        
        public void UnRegisterPriorRule(string identifier) {
            base.Channel.UnRegisterPriorRule(identifier);
        }
        
        public bool RegisterCorpAction(string identifier) {
            return base.Channel.RegisterCorpAction(identifier);
        }
        
        public void UnRegisterCorpAction(string identifier) {
            base.Channel.UnRegisterCorpAction(identifier);
        }
        
        public string GetGuid() {
            return base.Channel.GetGuid();
        }
        
        public System.Collections.Generic.List<string> RegisterPosting(int systemId, System.Collections.Generic.List<string> secIds) {
            return base.Channel.RegisterPosting(systemId, secIds);
        }
        
        public void UnRegisterPosting(int systemId, System.Collections.Generic.List<string> secIds) {
            base.Channel.UnRegisterPosting(systemId, secIds);
        }
        
        public bool RegisterFileUpload(string identifier) {
            return base.Channel.RegisterFileUpload(identifier);
        }
        
        public void UnRegisterFileUpload(string identifier) {
            base.Channel.UnRegisterFileUpload(identifier);
        }
        
        public bool RegisterSecuritiesForUpdates(System.Collections.Generic.List<string> securities) {
            return base.Channel.RegisterSecuritiesForUpdates(securities);
        }
        
        public void UnRegisterSecuritiesForUpdates(System.Collections.Generic.List<string> securities) {
            base.Channel.UnRegisterSecuritiesForUpdates(securities);
        }
        
        public void RegisterDownstreamPosting(int systemId, System.Collections.Generic.List<string> instrumentIds, int moduleId) {
            base.Channel.RegisterDownstreamPosting(systemId, instrumentIds, moduleId);
        }
        
        public void UnRegisterDownstreamPosting(int systemId, System.Collections.Generic.List<string> instrumentIds, int moduleId) {
            base.Channel.UnRegisterDownstreamPosting(systemId, instrumentIds, moduleId);
        }
        
        public bool RegisterTimeSeriesLock(string identifier) {
            return base.Channel.RegisterTimeSeriesLock(identifier);
        }
        
        public void UnRegisterTimeSeriesLock(string identifier) {
            base.Channel.UnRegisterTimeSeriesLock(identifier);
        }
        
        public bool RegisterBBGAuditLock(string identifier) {
            return base.Channel.RegisterBBGAuditLock(identifier);
        }
        
        public void UnRegisterBBGAuditLock(string identifier) {
            base.Channel.UnRegisterBBGAuditLock(identifier);
        }
        
        public System.Collections.Generic.List<string> GetAvailableModules() {
            return base.Channel.GetAvailableModules();
        }
        
        public System.Collections.Generic.List<com.ivp.srm.vendorapi.ServiceReference1.PostingLocksOutputInfo> GetPostingLocks(string clientName) {
            return base.Channel.GetPostingLocks(clientName);
        }
        
        public com.ivp.srm.vendorapi.ServiceReference1.ClearPostingLocksOutputInfo ClearPostingLocks(string moduleName, string systemName, string InstrumentIds, string clientName) {
            return base.Channel.ClearPostingLocks(moduleName, systemName, InstrumentIds, clientName);
        }
    }
}
