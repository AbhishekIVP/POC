//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.ivp.rad.RCommonTaskManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/com.ivp.rad.RCTMUtils")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatusInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus, string[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomClassAssemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomClassClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DependantOnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMutedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReRunOnFailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsUndoSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus, string[]> MailSubscribeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnFailRunTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProceedOnFailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatusInfo StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskSummaryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeOutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyLocation {
            get {
                return this.AssemblyLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyLocationField, value) != true)) {
                    this.AssemblyLocationField = value;
                    this.RaisePropertyChanged("AssemblyLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChainId {
            get {
                return this.ChainIdField;
            }
            set {
                if ((this.ChainIdField.Equals(value) != true)) {
                    this.ChainIdField = value;
                    this.RaisePropertyChanged("ChainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomClassAssembly {
            get {
                return this.CustomClassAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomClassAssemblyField, value) != true)) {
                    this.CustomClassAssemblyField = value;
                    this.RaisePropertyChanged("CustomClassAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomClassClassName {
            get {
                return this.CustomClassClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomClassClassNameField, value) != true)) {
                    this.CustomClassClassNameField = value;
                    this.RaisePropertyChanged("CustomClassClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object DependantOnId {
            get {
                return this.DependantOnIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DependantOnIdField, value) != true)) {
                    this.DependantOnIdField = value;
                    this.RaisePropertyChanged("DependantOnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlowID {
            get {
                return this.FlowIDField;
            }
            set {
                if ((this.FlowIDField.Equals(value) != true)) {
                    this.FlowIDField = value;
                    this.RaisePropertyChanged("FlowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMuted {
            get {
                return this.IsMutedField;
            }
            set {
                if ((this.IsMutedField.Equals(value) != true)) {
                    this.IsMutedField = value;
                    this.RaisePropertyChanged("IsMuted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReRunOnFail {
            get {
                return this.IsReRunOnFailField;
            }
            set {
                if ((this.IsReRunOnFailField.Equals(value) != true)) {
                    this.IsReRunOnFailField = value;
                    this.RaisePropertyChanged("IsReRunOnFail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsUndoSupported {
            get {
                return this.IsUndoSupportedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsUndoSupportedField, value) != true)) {
                    this.IsUndoSupportedField = value;
                    this.RaisePropertyChanged("IsUndoSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus, string[]> MailSubscribeId {
            get {
                return this.MailSubscribeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MailSubscribeIdField, value) != true)) {
                    this.MailSubscribeIdField = value;
                    this.RaisePropertyChanged("MailSubscribeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnFailRunTask {
            get {
                return this.OnFailRunTaskField;
            }
            set {
                if ((this.OnFailRunTaskField.Equals(value) != true)) {
                    this.OnFailRunTaskField = value;
                    this.RaisePropertyChanged("OnFailRunTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProceedOnFail {
            get {
                return this.ProceedOnFailField;
            }
            set {
                if ((this.ProceedOnFailField.Equals(value) != true)) {
                    this.ProceedOnFailField = value;
                    this.RaisePropertyChanged("ProceedOnFail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetryCount {
            get {
                return this.RetryCountField;
            }
            set {
                if ((this.RetryCountField.Equals(value) != true)) {
                    this.RetryCountField = value;
                    this.RaisePropertyChanged("RetryCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetryInterval {
            get {
                return this.RetryIntervalField;
            }
            set {
                if ((this.RetryIntervalField.Equals(value) != true)) {
                    this.RetryIntervalField = value;
                    this.RaisePropertyChanged("RetryInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatusInfo Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskMasterId {
            get {
                return this.TaskMasterIdField;
            }
            set {
                if ((this.TaskMasterIdField.Equals(value) != true)) {
                    this.TaskMasterIdField = value;
                    this.RaisePropertyChanged("TaskMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskSummaryId {
            get {
                return this.TaskSummaryIdField;
            }
            set {
                if ((this.TaskSummaryIdField.Equals(value) != true)) {
                    this.TaskSummaryIdField = value;
                    this.RaisePropertyChanged("TaskSummaryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskTypeName {
            get {
                return this.TaskTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskTypeNameField, value) != true)) {
                    this.TaskTypeNameField = value;
                    this.RaisePropertyChanged("TaskTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskStatusInfo", Namespace="http://schemas.datacontract.org/2004/07/com.ivp.rad.RCTMUtils")]
    [System.SerializableAttribute()]
    public partial class TaskStatusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string environmentVariablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBody {
            get {
                return this.MailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MailBodyField, value) != true)) {
                    this.MailBodyField = value;
                    this.RaisePropertyChanged("MailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskLog {
            get {
                return this.TaskLogField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskLogField, value) != true)) {
                    this.TaskLogField = value;
                    this.RaisePropertyChanged("TaskLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string environmentVariables {
            get {
                return this.environmentVariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.environmentVariablesField, value) != true)) {
                    this.environmentVariablesField = value;
                    this.RaisePropertyChanged("environmentVariables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskStatus", Namespace="http://schemas.datacontract.org/2004/07/com.ivp.rad.RCTMUtils")]
    public enum TaskStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PASSED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INPROGRESS = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICTMService", CallbackContract=typeof(com.ivp.rad.RCommonTaskManager.ServiceReference1.ICTMServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICTMService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/RegisterClient")]
        void RegisterClient(int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/TriggerChain", ReplyAction="http://tempuri.org/ICTMService/TriggerChainResponse")]
        string TriggerChain(int chainId, bool isservice);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TriggerTaskInChain")]
        void TriggerTaskInChain(int chainId, int FlowId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TriggerSingleTaskInChain")]
        void TriggerSingleTaskInChain(int chainId, int FlowId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TaskCompleted")]
        void TaskCompleted(com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskInfo taskInfo, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/isAlive", ReplyAction="http://tempuri.org/ICTMService/isAliveResponse")]
        bool isAlive();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTMServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/triggerTask")]
        void triggerTask(com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskInfo taskInfo, string guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTMServiceChannel : com.ivp.rad.RCommonTaskManager.ServiceReference1.ICTMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTMServiceClient : System.ServiceModel.DuplexClientBase<com.ivp.rad.RCommonTaskManager.ServiceReference1.ICTMService>, com.ivp.rad.RCommonTaskManager.ServiceReference1.ICTMService {
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(int moduleId) {
            base.Channel.RegisterClient(moduleId);
        }
        
        public string TriggerChain(int chainId, bool isservice) {
            return base.Channel.TriggerChain(chainId, isservice);
        }
        
        public void TriggerTaskInChain(int chainId, int FlowId) {
            base.Channel.TriggerTaskInChain(chainId, FlowId);
        }
        
        public void TriggerSingleTaskInChain(int chainId, int FlowId) {
            base.Channel.TriggerSingleTaskInChain(chainId, FlowId);
        }
        
        public void TaskCompleted(com.ivp.rad.RCommonTaskManager.ServiceReference1.TaskInfo taskInfo, string guid) {
            base.Channel.TaskCompleted(taskInfo, guid);
        }
        
        public bool isAlive() {
            return base.Channel.isAlive();
        }
    }
}
