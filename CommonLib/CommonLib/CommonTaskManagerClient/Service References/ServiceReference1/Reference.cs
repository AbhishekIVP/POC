//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommonTaskManagerClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICTMService", CallbackContract=typeof(CommonTaskManagerClient.ServiceReference1.ICTMServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICTMService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/RegisterClient")]
        void RegisterClient(int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/TriggerChain", ReplyAction="http://tempuri.org/ICTMService/TriggerChainResponse")]
        string TriggerChain(int chainId, bool isservice);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TriggerTaskInChain")]
        void TriggerTaskInChain(int chainId, int FlowId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TriggerSingleTaskInChain")]
        void TriggerSingleTaskInChain(int chainId, int FlowId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/TaskCompleted")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.TaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.MailDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.TaskStatusInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<com.ivp.rad.RCTMUtils.TaskStatus, com.ivp.rad.RCTMUtils.MailDetails>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        void TaskCompleted(com.ivp.rad.RCTMUtils.TaskInfo taskInfo, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/isAlive", ReplyAction="http://tempuri.org/ICTMService/isAliveResponse")]
        bool isAlive();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/RemoveTaskFromRunningChains")]
        void RemoveTaskFromRunningChains(int taskStatusId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/GetSubscriberList", ReplyAction="http://tempuri.org/ICTMService/GetSubscriberListResponse")]
        string GetSubscriberList();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTMServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICTMService/triggerTask")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.TaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.MailDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(com.ivp.rad.RCTMUtils.TaskStatusInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<com.ivp.rad.RCTMUtils.TaskStatus, com.ivp.rad.RCTMUtils.MailDetails>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        void triggerTask(com.ivp.rad.RCTMUtils.TaskInfo taskInfo, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTMService/getSubscriberList", ReplyAction="http://tempuri.org/ICTMService/getSubscriberListResponse")]
        string getSubscriberList();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTMServiceChannel : CommonTaskManagerClient.ServiceReference1.ICTMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTMServiceClient : System.ServiceModel.DuplexClientBase<CommonTaskManagerClient.ServiceReference1.ICTMService>, CommonTaskManagerClient.ServiceReference1.ICTMService {
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CTMServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(int moduleId) {
            base.Channel.RegisterClient(moduleId);
        }
        
        public string TriggerChain(int chainId, bool isservice) {
            return base.Channel.TriggerChain(chainId, isservice);
        }
        
        public void TriggerTaskInChain(int chainId, int FlowId) {
            base.Channel.TriggerTaskInChain(chainId, FlowId);
        }
        
        public void TriggerSingleTaskInChain(int chainId, int FlowId) {
            base.Channel.TriggerSingleTaskInChain(chainId, FlowId);
        }
        
        public void TaskCompleted(com.ivp.rad.RCTMUtils.TaskInfo taskInfo, string guid) {
            base.Channel.TaskCompleted(taskInfo, guid);
        }
        
        public bool isAlive() {
            return base.Channel.isAlive();
        }
        
        public void RemoveTaskFromRunningChains(int taskStatusId, string guid) {
            base.Channel.RemoveTaskFromRunningChains(taskStatusId, guid);
        }
        
        public string GetSubscriberList() {
            return base.Channel.GetSubscriberList();
        }
    }
}
