<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RCryptography</name>
    </assembly>
    <members>
        <member name="T:com.ivp.rad.cryptography.RRSAEncrDecr">
            <summary>
            Class implementing the RSA algorithm
            </summary>
        </member>
        <member name="T:com.ivp.rad.cryptography.IREncryptor">
            <summary>
            Interface containing the method for encryption 
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.IREncryptor.DoEncrypt(System.String)">
             <summary>
            Interface function that does the encryption
             </summary>
             <param name="dataToEncrypt">The data to encrypt.</param>
             <returns>The encrypted data along with keys</returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.IRDecryptor">
            <summary>
            Interface containing  the method for decryption
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.IRDecryptor.DoDecrypt(System.String)">
             <summary>
            Interface function that does the decryption.
             </summary>
             <param name="encryptedData">The encrypted data.</param>
             <returns>The decrypted data</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RRSAEncrDecr.DoEncrypt(System.String)">
            <summary>
            RSA function that does the encryption
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>the encrypted string</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RRSAEncrDecr.DoDecrypt(System.String)">
            <summary>
            RSA function that does the decryption
            </summary>
            <param name="encryptedData">The encrypted data.</param>
            <returns>Decrypted  string </returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.RGPGEncrDecr">
            <summary>
            Class implementing the GPG encryption\decryption
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.DoDecrypt(System.String)">
            <summary>
            This decryption mechanism not supported 
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>Throw a  decryption not supported exception</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGDoDecrypt(System.String,System.String)">
            <summary>
            GPG mechanism for decryption
            </summary>
            <param name="dataToDecrypt">The data to decrypt.</param>
            <param name="passPhrase">The pass phrase.</param>
            <returns></returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGFileDecryption(System.String,System.String)">
            <summary>
            GPG File Decryption (over writes the existing file) The Decrypted name of the file is
            .gpg extension  removed 
            </summary>
            <param name="nameOfFileToBeDecrypted">The name of file to be decrypted.</param>
            <param name="passphrase">The passphrase.</param>
            <returns></returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGFileDecryption(System.String,System.String,System.String)">
            <summary>
            GPG File Decryption
            </summary>
            <param name="nameOfFileToBeDecrypted">The name of file to be decrypted.</param>
            <param name="passphrase">The passphrase.</param>
            <param name="nameOfTheDecryptedFile">The name of the decrypted file.</param>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.#ctor(System.String)">
            <summary>
            Defines the Home Directory for the GPG
            </summary>
            <param name="homeDir"></param>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.DoEncrypt(System.String)">
            <summary>
            This mechanism of encryption not supported
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>The encrypted data along with keys</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GenerateKeys(com.ivp.rad.cryptography.RGPGKeyInfo)">
            <summary>
            Generates the keys.
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGDoEncrypt(System.String,System.String,System.String)">
            <summary>
            GPG mechanism for the encryption
            </summary>
            <param name="dataToEncrypt">string</param>
            <param name="senderName">string</param>
            <param name="reciepientName">string</param>
            <returns></returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGFileEncryption(System.String,System.String)">
            <summary>
            GPG File Encryption (overwrites the file if it exist) EncryptedFile appended with .gpg
            </summary>
            <param name="nameOfFileToBeEncrypted">string</param>
            <param name="reciepientName">string</param>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.GPGFileEncryption(System.String,System.String,System.String)">
            <summary>
            GPG File Encryption (overwrites the file if it exist)
            </summary>
            <param name="nameOfFileToBeEncrypted">The name of file to be encrypted.</param>
            <param name="reciepientName">Reciepient Name</param>
            <param name="nameOfTheEncryptedFile">The name of the encrypted file.</param>
            <returns></returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.ExecuteCommand">
            <summary>
            Execute the GnuPG command defined by all parameters/options/properties.
            <p/>Raise a GnuPGException whenever an error occurs.
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.BuildOptions">
            <summary>
            Generate a string of GnuPG command line arguments, based on the properties
            set in this object 
            this method generates the "--armor" argument).
            </summary>
            <returns>GnuPG command line arguments</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.StandardOutputReader">
            <summary>
            Reader thread for standard output
            
            <p/>Updates the private variable _outputString (locks it first)
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RGPGEncrDecr.StandardErrorReader">
            <summary>
            Reader thread for standard error
            <p/>Updates the private variable _errorString (locks it first)
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.OutputText">
            <summary>
            Gets or sets the output text.
            </summary>
            <value>The output text.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.InputText">
            <summary>
            Gets or sets the input text.
            </summary>
            <value>The input text.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.FileToBeEncrypted">
            <summary>
            Gets or sets the file to be encrypted.
            </summary>
            <value>The file to be encrypted.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.EncryptedFile">
            <summary>
            Gets or sets the encrypted file.
            </summary>
            <value>The encrypted file.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.FileTOBeDecrypted">
            <summary>
            Gets or sets the file TO be decrypted.
            </summary>
            <value>The file TO be decrypted.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.DecryptedFile">
            <summary>
            Gets or sets the decrypted file.
            </summary>
            <value>The decrypted file.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Command">
            <summary>
            Command property: set the type of command to execute (sign, encrypt...)
            
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Armor">
            <summary>
            Boolean flag: if true, GnuPG creates ASCII armored output (text output).
            <p/>Defaults to true (ASCII ouput).
            </summary>
            <value><c>true</c> if armor; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Recipient">
            <summary>
            Recipient email address - mandatory when 
            <p/>GnuPG uses this parameter to find the associated public key.
            </summary>
            <value>The recipient.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Originator">
            <summary>
            Originator email address - recommended 
            <p/>GnuPG uses this parameter to find the associated secret key.
            </summary>
            <value>The originator.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Yes">
            <summary>
            Boolean flag; if true, GnuPG assumes "yes" on most questions.
            
            <p/>Defaults to true.
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Batch">
            <summary>
            Boolean flag; if true, GnuPG uses batch mode (Never ask, do not allow
            interactive commands).
            <p/>Defaults to true.
            </summary>
            <value><c>true</c> if batch; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Passphrase">
            <summary>
            Passphrase for using your private key - mandatory when
            </summary>
            <value>The passphrase.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.HomeDirectory">
            <summary>
            name of the home directory (where keyrings AND gpg.exe are located)
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.PassphraseFD">
            <summary>
            File descriptor for entering passphrase - defaults to 0 (standard input).
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.ExitCode">
            <summary>
            Exit code from GnuPG process (0 = success; otherwise an error occured)
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.Verbose">
            <summary>
            Verbose level (NoVerbose, Verbose, VeryVerbose). 
            
            <p/>Defaults to NoVerbose.
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.ProcessTimeOutMilliseconds">
            <summary>
            Timeout for GnuPG process, in milliseconds.
            
            <p/>If the process doesn't exit before the end of the timeout period, the process is terminated (killed).
            
            <p/>Defaults to 10000 (10 seconds).
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGEncrDecr.KeyInfo">
            <summary>
            Gets or sets the key info.
            </summary>
            <value>The key info.</value>
        </member>
        <member name="T:com.ivp.rad.cryptography.RGPGEncrDecr.Commands">
            <summary>
            List (enum) of available commands (encrypt,decrypt)
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.Commands.Encrypt">
            <summary>
            Encrypt  data
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.Commands.Decrypt">
            <summary>
            Decrypt data
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.Commands.EncryptFile">
            <summary>
            Encrypt File
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.Commands.DecryptFile">
            <summary>
            Decrypt File
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.Commands.GenerateKey">
            <summary>
            Generates Key
            </summary>
        </member>
        <member name="T:com.ivp.rad.cryptography.RGPGEncrDecr.VerboseLevel">
            <summary>
            List (enum) of available verbose levels (NoVerbose, Verbose, VeryVerbose)
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.VerboseLevel.NoVerbose">
            <summary>
            Reset verbose level to 0 (no information shown during processing)
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.VerboseLevel.Verbose">
            <summary>
            Give more information during processing.
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.RGPGEncrDecr.VerboseLevel.VeryVerbose">
            <summary>
            Give full information during processing (the input data is listed in detail).
            </summary>
        </member>
        <member name="T:com.ivp.rad.cryptography.RSHA256EncrDecr">
            <summary>
            Class implementing the SHA 256 Hash 
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RSHA256EncrDecr.DoEncrypt(System.String)">
            <summary>
            SHA256 function that calculates the hash of the input string
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>Hash of input string</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RSHA256EncrDecr.DoDecrypt(System.String)">
            <summary>
            SHA256 does not supports decryption throws an exception
            </summary>
            <param name="encryptedData">The encrypted data.</param>
            <returns></returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RSHA256EncrDecr.CompareHash(System.String,System.String)">
            <summary>
            SHA256 that verifies the hash by calculating the hash of the input string and comparing 
            it with already calculates hash
            </summary>
            <param name="inputString">The input string.</param>
            <param name="calculatedHash">The calculated hash.</param>
            <returns>A boolean</returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.RDESEncrDecr">
            <summary>
            Class implementing the DES algorithm
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RDESEncrDecr.DoEncrypt(System.String)">
            <summary>
            DES function that does the encryption
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>The encrypted data along with DES keys</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RDESEncrDecr.DoDecrypt(System.String)">
            <summary>
            DES algorithm function that does the decryption
            </summary>
            <param name="encryptedData">The encrypted data.</param>
            <returns>decrypted string</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RDESEncrDecr.Transform(System.Byte[],System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Transforms the specified input i.e plaintext to cipher(encrypt) and vice - versa
            </summary>
            <param name="input">The input.</param>
            <param name="CryptoTransform">The crypto transform.</param>
            <returns>Byte[]</returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.RMD5EncrDecr">
            <summary>
            Class implementing the MD5 Hash
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RMD5EncrDecr.DoDecrypt(System.String)">
            <summary>
            MD5 does not supports decryption
            </summary>
            <param name="encryptedData">The encrypted data.</param>
            <returns>Throws an exception since RMD5 does not support decryption</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RMD5EncrDecr.CompareHash(System.String,System.String)">
            <summary>
            MD5 function which calculates the hash of the inputString and  then compares it with the
            already existing hash of the string(It's a one -way hash function)
            </summary>
            <param name="inputString">The input string.</param>
            <param name="calculatedHash">The calculated hash.</param>
            <returns>A boolean</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RMD5EncrDecr.DoEncrypt(System.String)">
            <summary>
            MD5 function that does the encryption basically calulates the hash of input string
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>The hash of the Input Data</returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.RRijndaelEncrDecr">
            <summary>
            Class implemeting the Rijndael Algorithm
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RRijndaelEncrDecr.DoDecrypt(System.String)">
            <summary>
            Rijndael function that does the decryption
            </summary>
            <param name="encryptedData">The encrypted data.</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RRijndaelEncrDecr.DoEncrypt(System.String)">
            <summary>
            Rijndael function that does the encryption
            </summary>
            <param name="dataToEncrypt">The data to encrypt.</param>
            <returns>Encrypted string containing along with the key details</returns>
        </member>
        <member name="M:com.ivp.rad.cryptography.RRijndaelEncrDecr.Transform(System.Byte[],System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Rijndael function that transforms the plaintext to ciphertext and vice - versa
            </summary>
            <param name="input">The input.</param>
            <param name="CryptoTransform">The crypto transform.</param>
            <returns>Array of bytes</returns>
        </member>
        <member name="T:com.ivp.rad.cryptography.RCryptographyException">
            <summary>
            The Exception handling block for the RCryptography
            </summary>
        </member>
        <member name="M:com.ivp.rad.cryptography.RCryptographyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:com.ivp.rad.cryptography.RCryptographyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:com.ivp.rad.cryptography.RCryptographyException.#ctor(System.String,com.ivp.rad.common.RException)">
            <summary>
            Initializes a new instance of the <see cref="T:com.ivp.rad.cryptography.RCryptographyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:com.ivp.rad.cryptography.RGPGKeyInfo">
            <summary>
            Class containg the Details of GPG encryption\decryption mechanism
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.KeyType">
            <summary>
            Sets the type of the key.
            </summary>
            <value>The type of the key.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.PassPhrase">
            <summary>
            Sets the pass phrase.
            </summary>
            <value>The pass phrase.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.Name">
            <summary>
            Sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.Email">
            <summary>
            Sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.Comment">
            <summary>
            Sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.RGPGKeyInfo.ExpireDate">
            <summary>
            Sets the expire date.
            </summary>
            <value>The expire date.</value>
        </member>
        <member name="T:com.ivp.rad.cryptography.KeyTypes">
            <summary>
            Enum Specifying the key types supported in GPG
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.KeyTypes.DSA">
            <summary>
            Implements DSA
            </summary>
        </member>
        <member name="F:com.ivp.rad.cryptography.KeyTypes.RSA">
            <summary>
            Implements RSA
            </summary>
        </member>
        <member name="T:com.ivp.rad.cryptography.DataInfo">
            <summary>
            Incorporates the information required to be passed as an argument to DES,RSA and Rijndael
            </summary>
        </member>
        <member name="P:com.ivp.rad.cryptography.DataInfo.KEY">
            <summary>
            Gets or sets the KEY.
            </summary>
            <value>The KEY.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.DataInfo.IV">
            <summary>
            Gets or sets the InitializationVector.
            </summary>
            <value>The IV.</value>
        </member>
        <member name="P:com.ivp.rad.cryptography.DataInfo.EncryptedData">
            <summary>
            Gets or sets the encrypted data.
            </summary>
            <value>The encrypted data.</value>
        </member>
    </members>
</doc>
