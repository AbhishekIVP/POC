//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.ivp.rad.RMarketWSO.GAMService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityId", Namespace="http://markit.com/Markit/GAM/2012/05")]
    [System.SerializableAttribute()]
    public partial class SecurityId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RequestIdField;
        
        private com.ivp.rad.RMarketWSO.GAMService.SecurityTypeValuePair[] SecurityTypeValuePairsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public com.ivp.rad.RMarketWSO.GAMService.SecurityTypeValuePair[] SecurityTypeValuePairs {
            get {
                return this.SecurityTypeValuePairsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTypeValuePairsField, value) != true)) {
                    this.SecurityTypeValuePairsField = value;
                    this.RaisePropertyChanged("SecurityTypeValuePairs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityTypeValuePair", Namespace="http://markit.com/Markit/GAM/2012/05")]
    [System.SerializableAttribute()]
    public partial class SecurityTypeValuePair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string SecurityIdTypeField;
        
        private string SecurityIdValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SecurityIdType {
            get {
                return this.SecurityIdTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIdTypeField, value) != true)) {
                    this.SecurityIdTypeField = value;
                    this.RaisePropertyChanged("SecurityIdType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SecurityIdValue {
            get {
                return this.SecurityIdValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIdValueField, value) != true)) {
                    this.SecurityIdValueField = value;
                    this.RaisePropertyChanged("SecurityIdValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscribedFacility", Namespace="http://markit.com/Markit/GAM/2012/05")]
    [System.SerializableAttribute()]
    public partial class SubscribedFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WsoDataFacilityIdField;
        
        private bool SubscribedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WsoDataFacilityId {
            get {
                return this.WsoDataFacilityIdField;
            }
            set {
                if ((this.WsoDataFacilityIdField.Equals(value) != true)) {
                    this.WsoDataFacilityIdField = value;
                    this.RaisePropertyChanged("WsoDataFacilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool Subscribed {
            get {
                return this.SubscribedField;
            }
            set {
                if ((this.SubscribedField.Equals(value) != true)) {
                    this.SubscribedField = value;
                    this.RaisePropertyChanged("Subscribed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralServiceFault", Namespace="http://markit.com/Markit/GAM/2012/05")]
    [System.SerializableAttribute()]
    public partial class GeneralServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid idField;
        
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnsubscribedFacility", Namespace="http://markit.com/Markit/GAM/2012/05")]
    [System.SerializableAttribute()]
    public partial class UnsubscribedFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WsoDataFacilityIdField;
        
        private bool UnubscribedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WsoDataFacilityId {
            get {
                return this.WsoDataFacilityIdField;
            }
            set {
                if ((this.WsoDataFacilityIdField.Equals(value) != true)) {
                    this.WsoDataFacilityIdField = value;
                    this.RaisePropertyChanged("WsoDataFacilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool Unubscribed {
            get {
                return this.UnubscribedField;
            }
            set {
                if ((this.UnubscribedField.Equals(value) != true)) {
                    this.UnubscribedField = value;
                    this.RaisePropertyChanged("Unubscribed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", ConfigurationName="GAMService.GamService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface GamService {
        
        // CODEGEN: Generating message contract since the wrapper name (FacilitySubscribeRequest) of message FacilitySubscribeRequest does not match the default value (FacilitySubscribe)
        [System.ServiceModel.OperationContractAttribute(Action="http://markit.com/Markit/GAM/2012/05/FacilitySubscribe", ReplyAction="http://markit.com/Markit/GAM/2012/05/GamService/FacilitySubscribeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(com.ivp.rad.RMarketWSO.GAMService.GeneralServiceFault), Action="http://markit.com/Markit/GAM/2012/05/GamService/FacilitySubscribeGeneralServiceFa" +
            "ultFault", Name="GeneralServiceFault")]
        com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeResponse FacilitySubscribe(com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (FacilityUnsubscribeRequest) of message FacilityUnsubscribeRequest does not match the default value (FacilityUnsubscribe)
        [System.ServiceModel.OperationContractAttribute(Action="http://markit.com/Markit/GAM/2012/05/FacilityUnsubscribe", ReplyAction="http://markit.com/Markit/GAM/2012/05/GamService/FacilityUnsubscribeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(com.ivp.rad.RMarketWSO.GAMService.GeneralServiceFault), Action="http://markit.com/Markit/GAM/2012/05/GamService/FacilityUnsubscribeGeneralService" +
            "FaultFault", Name="GeneralServiceFault")]
        com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeResponse FacilityUnsubscribe(com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation GetAllSubscribed is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://markit.com/Markit/GAM/2012/05/GetAllSubscribed", ReplyAction="http://markit.com/Markit/GAM/2012/05/GamService/GetAllSubscribedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(com.ivp.rad.RMarketWSO.GAMService.GeneralServiceFault), Action="http://markit.com/Markit/GAM/2012/05/GamService/GetAllSubscribedGeneralServiceFau" +
            "ltFault", Name="GeneralServiceFault")]
        com.ivp.rad.RMarketWSO.GAMService.FacilitiesGetAllSubscribedResponse GetAllSubscribed(com.ivp.rad.RMarketWSO.GAMService.GetAllSubscribedRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FacilitySubscribeRequest", WrapperNamespace="http://markit.com/Markit/GAM/2012/05", IsWrapped=true)]
    public partial class FacilitySubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=0)]
        public com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds;
        
        public FacilitySubscribeRequest() {
        }
        
        public FacilitySubscribeRequest(com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds) {
            this.SecurityIds = SecurityIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FacilitySubscribeResponse", WrapperNamespace="http://markit.com/Markit/GAM/2012/05", IsWrapped=true)]
    public partial class FacilitySubscribeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=0)]
        public int ResponseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=1)]
        public com.ivp.rad.RMarketWSO.GAMService.SubscribedFacility[] SubscribedFacilities;
        
        public FacilitySubscribeResponse() {
        }
        
        public FacilitySubscribeResponse(int ResponseId, com.ivp.rad.RMarketWSO.GAMService.SubscribedFacility[] SubscribedFacilities) {
            this.ResponseId = ResponseId;
            this.SubscribedFacilities = SubscribedFacilities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FacilityUnsubscribeRequest", WrapperNamespace="http://markit.com/Markit/GAM/2012/05", IsWrapped=true)]
    public partial class FacilityUnsubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=0)]
        public com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds;
        
        public FacilityUnsubscribeRequest() {
        }
        
        public FacilityUnsubscribeRequest(com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds) {
            this.SecurityIds = SecurityIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FacilityUnsubscribeResponse", WrapperNamespace="http://markit.com/Markit/GAM/2012/05", IsWrapped=true)]
    public partial class FacilityUnsubscribeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=0)]
        public int ResponseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=1)]
        public com.ivp.rad.RMarketWSO.GAMService.UnsubscribedFacility[] UnsubscribedFacilities;
        
        public FacilityUnsubscribeResponse() {
        }
        
        public FacilityUnsubscribeResponse(int ResponseId, com.ivp.rad.RMarketWSO.GAMService.UnsubscribedFacility[] UnsubscribedFacilities) {
            this.ResponseId = ResponseId;
            this.UnsubscribedFacilities = UnsubscribedFacilities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllSubscribedRequest {
        
        public GetAllSubscribedRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FacilitiesGetAllSubscribedResponse", WrapperNamespace="http://markit.com/Markit/GAM/2012/05", IsWrapped=true)]
    public partial class FacilitiesGetAllSubscribedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://markit.com/Markit/GAM/2012/05", Order=0)]
        public int[] SubscribedFacilities;
        
        public FacilitiesGetAllSubscribedResponse() {
        }
        
        public FacilitiesGetAllSubscribedResponse(int[] SubscribedFacilities) {
            this.SubscribedFacilities = SubscribedFacilities;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GamServiceChannel : com.ivp.rad.RMarketWSO.GAMService.GamService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GamServiceClient : System.ServiceModel.ClientBase<com.ivp.rad.RMarketWSO.GAMService.GamService>, com.ivp.rad.RMarketWSO.GAMService.GamService {
        
        public GamServiceClient() {
        }
        
        public GamServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GamServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeResponse com.ivp.rad.RMarketWSO.GAMService.GamService.FacilitySubscribe(com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeRequest request) {
            return base.Channel.FacilitySubscribe(request);
        }
        
        public int FacilitySubscribe(com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds, out com.ivp.rad.RMarketWSO.GAMService.SubscribedFacility[] SubscribedFacilities) {
            com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeRequest inValue = new com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeRequest();
            inValue.SecurityIds = SecurityIds;
            com.ivp.rad.RMarketWSO.GAMService.FacilitySubscribeResponse retVal = ((com.ivp.rad.RMarketWSO.GAMService.GamService)(this)).FacilitySubscribe(inValue);
            SubscribedFacilities = retVal.SubscribedFacilities;
            return retVal.ResponseId;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeResponse com.ivp.rad.RMarketWSO.GAMService.GamService.FacilityUnsubscribe(com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeRequest request) {
            return base.Channel.FacilityUnsubscribe(request);
        }
        
        public int FacilityUnsubscribe(com.ivp.rad.RMarketWSO.GAMService.SecurityId[] SecurityIds, out com.ivp.rad.RMarketWSO.GAMService.UnsubscribedFacility[] UnsubscribedFacilities) {
            com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeRequest inValue = new com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeRequest();
            inValue.SecurityIds = SecurityIds;
            com.ivp.rad.RMarketWSO.GAMService.FacilityUnsubscribeResponse retVal = ((com.ivp.rad.RMarketWSO.GAMService.GamService)(this)).FacilityUnsubscribe(inValue);
            UnsubscribedFacilities = retVal.UnsubscribedFacilities;
            return retVal.ResponseId;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        com.ivp.rad.RMarketWSO.GAMService.FacilitiesGetAllSubscribedResponse com.ivp.rad.RMarketWSO.GAMService.GamService.GetAllSubscribed(com.ivp.rad.RMarketWSO.GAMService.GetAllSubscribedRequest request) {
            return base.Channel.GetAllSubscribed(request);
        }
        
        public int[] GetAllSubscribed() {
            com.ivp.rad.RMarketWSO.GAMService.GetAllSubscribedRequest inValue = new com.ivp.rad.RMarketWSO.GAMService.GetAllSubscribedRequest();
            com.ivp.rad.RMarketWSO.GAMService.FacilitiesGetAllSubscribedResponse retVal = ((com.ivp.rad.RMarketWSO.GAMService.GamService)(this)).GetAllSubscribed(inValue);
            return retVal.SubscribedFacilities;
        }
    }
}
